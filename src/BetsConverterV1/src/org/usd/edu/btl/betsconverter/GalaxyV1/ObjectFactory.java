//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.06.23 at 04:45:00 PM CDT 
//


package org.usd.edu.btl.betsconverter.GalaxyV1;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Tool }
     * 
     * @return 
     */
    public Tool createTool() {
        return new Tool();
    }

    /**
     * Create an instance of {@link Requirements }
     * 
     * @return 
     */
    public Requirements createRequirements() {
        return new Requirements();
    }

    /**
     * Create an instance of {@link Parallelism }
     * 
     * @return 
     */
    public Parallelism createParallelism() {
        return new Parallelism();
    }

    /**
     * Create an instance of {@link Command }
     * 
     * @return 
     */
    public Command createCommand() {
        return new Command();
    }

    /**
     * Create an instance of {@link ConfigFiles }
     * 
     * @return 
     */
    public ConfigFiles createConfigFiles() {
        return new ConfigFiles();
    }

    /**
     * Create an instance of {@link Outputs }
     * 
     * @return 
     */
    public Outputs createOutputs() {
        return new Outputs();
    }

    /**
     * Create an instance of {@link Inputs }
     * 
     * @return 
     */
    public Inputs createInputs() {
        return new Inputs();
    }

    /**
     * Create an instance of {@link Tests }
     * 
     * @return 
     */
    public Tests createTests() {
        return new Tests();
    }

    /**
     * Create an instance of {@link Stdio }
     * 
     * @return 
     */
    public Stdio createStdio() {
        return new Stdio();
    }

    /**
     * Create an instance of {@link Code }
     * 
     * @return 
     */
    public Code createCode() {
        return new Code();
    }

    /**
     * Create an instance of {@link UIhints }
     * 
     * @return 
     */
    public UIhints createUIhints() {
        return new UIhints();
    }

    /**
     * Create an instance of {@link ChangeFormat }
     * 
     * @return 
     */
    public ChangeFormat createChangeFormat() {
        return new ChangeFormat();
    }

    /**
     * Create an instance of {@link ConditionalWhen }
     * 
     * @return 
     */
    public ConditionalWhen createConditionalWhen() {
        return new ConditionalWhen();
    }

    /**
     * Create an instance of {@link Column }
     * 
     * @return 
     */
    public Column createColumn() {
        return new Column();
    }

    /**
     * Create an instance of {@link Data }
     * 
     * @return 
     */
    public Data createData() {
        return new Data();
    }

    /**
     * Create an instance of {@link Test }
     * 
     * @return 
     */
    public Test createTest() {
        return new Test();
    }

    /**
     * Create an instance of {@link Requirement }
     * 
     * @return 
     */
    public Requirement createRequirement() {
        return new Requirement();
    }

    /**
     * Create an instance of {@link Validator }
     * 
     * @return 
     */
    public Validator createValidator() {
        return new Validator();
    }

    /**
     * Create an instance of {@link Add }
     * 
     * @return 
     */
    public Add createAdd() {
        return new Add();
    }

    /**
     * Create an instance of {@link Actions }
     * 
     * @return 
     */
    public Actions createActions() {
        return new Actions();
    }

    /**
     * Create an instance of {@link Repeat }
     * 
     * @return 
     */
    public Repeat createRepeat() {
        return new Repeat();
    }

    /**
     * Create an instance of {@link WhenData }
     * 
     * @return 
     */
    public WhenData createWhenData() {
        return new WhenData();
    }

    /**
     * Create an instance of {@link Param }
     * 
     * @return 
     */
    public Param createParam() {
        return new Param();
    }

    /**
     * Create an instance of {@link ExitCode }
     * 
     * @return 
     */
    public ExitCode createExitCode() {
        return new ExitCode();
    }

    /**
     * Create an instance of {@link Filter }
     * 
     * @return 
     */
    public Filter createFilter() {
        return new Filter();
    }

    /**
     * Create an instance of {@link ActionsConditional }
     * 
     * @return 
     */
    public ActionsConditional createActionsConditional() {
        return new ActionsConditional();
    }

    /**
     * Create an instance of {@link Valid }
     * 
     * @return 
     */
    public Valid createValid() {
        return new Valid();
    }

    /**
     * Create an instance of {@link Sanitizer }
     * 
     * @return 
     */
    public Sanitizer createSanitizer() {
        return new Sanitizer();
    }

    /**
     * Create an instance of {@link Conditional }
     * 
     * @return 
     */
    public Conditional createConditional() {
        return new Conditional();
    }

    /**
     * Create an instance of {@link ActionsOption }
     * 
     * @return 
     */
    public ActionsOption createActionsOption() {
        return new ActionsOption();
    }

    /**
     * Create an instance of {@link Action }
     * 
     * @return 
     */
    public Action createAction() {
        return new Action();
    }

    /**
     * Create an instance of {@link Remove }
     * 
     * @return 
     */
    public Remove createRemove() {
        return new Remove();
    }

    /**
     * Create an instance of {@link ActionsConditionalWhen }
     * 
     * @return 
     */
    public ActionsConditionalWhen createActionsConditionalWhen() {
        return new ActionsConditionalWhen();
    }

    /**
     * Create an instance of {@link ParamOption }
     * 
     * @return 
     */
    public ParamOption createParamOption() {
        return new ParamOption();
    }

    /**
     * Create an instance of {@link Options }
     * 
     * @return 
     */
    public Options createOptions() {
        return new Options();
    }

    /**
     * Create an instance of {@link TestOutput }
     * 
     * @return 
     */
    public TestOutput createTestOutput() {
        return new TestOutput();
    }

    /**
     * Create an instance of {@link ConfigFile }
     * 
     * @return 
     */
    public ConfigFile createConfigFile() {
        return new ConfigFile();
    }

    /**
     * Create an instance of {@link TestParam }
     * 
     * @return 
     */
    public TestParam createTestParam() {
        return new TestParam();
    }

    /**
     * Create an instance of {@link Regex }
     * 
     * @return 
     */
    public Regex createRegex() {
        return new Regex();
    }

}
